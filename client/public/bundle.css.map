{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte"
  ],
  "sourcesContent": [
    "<h1>svelte-spa-router example</h1>\n<!-- Navigation links, using the \"link\" action -->\n<!-- Also, use the \"active\" action to add the \"active\" CSS class when the URL matches -->\n<ul class=\"navigation-links\">\n    <li><a href=\"/\" use:link use:active>Home</a></li>\n    <li><a href=\"/login\" use:link><b>Login</b></a></li>\n</ul>\n\n<!-- Show the router -->\n<Router {routes} on:conditionsFailed={conditionsFailed} on:routeLoaded={routeLoaded} />\n<style>\n/* Style for \"active\" links; need to mark this :global because the router adds the class directly */\n:global(a.active) {\n    color: crimson;\n}\n</style>\n\n<script>\n// Import the router component\n// Normally, this would be import: \nimport Router from 'svelte-spa-router'\n// Import the \"link\" action and the methods to control history programmatically from the same module, as well as the location store\nimport {link, push, pop, replace, location, querystring} from 'svelte-spa-router'\n\n// Import the \"active\" action\n// Normally, this would be import: `import active from 'svelte-spa-router/active'`\nimport active from 'svelte-spa-router/active';\n\n// Import the list of routes\nimport routes from './routes'\n\n// Contains logging information used by tests\nlet logbox = ''\n\n// Handles the \"conditionsFailed\" event dispatched by the router when a component can't be loaded because one of its pre-condition failed\nfunction conditionsFailed(event) {\n    // eslint-disable-next-line no-console\n    console.error('Caught event conditionsFailed', event.detail)\n    logbox += 'conditionsFailed - ' + JSON.stringify(event.detail) + '\\n'\n\n    // Replace the route\n    replace('/wild/conditions-failed')\n}\n\n// Handles the \"routeLoaded\" event dispatched by the router after a route has been successfully loaded\nfunction routeLoaded(event) {\n    // eslint-disable-next-line no-console\n    console.info('Caught event routeLoaded', event.detail)\n    logbox += 'routeLoaded - ' + JSON.stringify(event.detail) + '\\n'\n}\n\n</script>\n"
  ],
  "names": [],
  "mappings": "AAYQ,QAAQ,AAAE,CAAC,AACf,KAAK,CAAE,OAAO,AAClB,CAAC"
}